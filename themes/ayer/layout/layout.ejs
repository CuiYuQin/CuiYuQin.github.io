<%- partial('_partial/head') %>

<body>
  <div id="app">
    <% if (theme.click_effect===2){ %>
      <canvas class="fireworks"></canvas>
      <style>
        .fireworks {
          position: fixed;
          left: 0;
          top: 0;
          z-index: 99999;
          pointer-events: none;
        }
      </style>
      <% } %>
      <% if (theme.click_effect===3){ %>
      <canvas width="1777" height="841"
        style="position: fixed; left: 0px; top: 0px; z-index: 99999; pointer-events: none;"></canvas>
      <% } %>

    <main class="content on">
      <%- body %>
      <%- partial('_partial/footer', null, {cache: !config.relative_link}) %>
      <div class="float_btns">
        <%- partial('_partial/totop') %>
      </div>
    </main>
    <aside class="sidebar on">
      <%- partial('_partial/sidebar') %>
    </aside>
    <script>
      if (window.matchMedia("(max-width: 768px)").matches) {
        document.querySelector('.content').classList.remove('on');
        document.querySelector('.sidebar').classList.remove('on');
      }
    </script>
    <%- partial('_partial/modal') %>
    <%- partial('_partial/after-footer') %>

    <% if (theme.music&&theme.music.enable){ %>
    <%- partial('_partial/music') %>
    <% } %>
    <!-- <div id="pjax-container">
      <% if(theme.aplayer.enable) { %>

        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.css">
        <div id="aplayer"></div>
        <script src="https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/color-thief-don@2.0.2/src/color-thief.js"></script>
        
          <script>
            const ap = new APlayer({
              container: document.getElementById('aplayer'),
              autoplay: false, //自动播放
              listFolded: true, //播放列表默认折叠
              listMaxHeight: 60, //播放列表最大高度
              order: 'list', //音频循环顺序, 可选值: 'list', 'random'
              loop: 'all', //音频循环播放, 可选值: 'all', 'one', 'none'
              theme: '#e9e9e9', //切换音频时的主题色，优先级低于audio.theme
              preload: 'none', //音频预加载，可选值: 'none', 'metadata', 'auto'
              mutex: true, //互斥，阻止多个播放器同时播放，当前播放器播放时暂停其他播放器
              lrcType: 2, //歌词格式，可选值：3（LRC文件歌词格式），1（JS字符串歌词格式）
              volume: 0.1, //默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效
              fixed: true, //吸底模式（fixed:true），迷你模式（mini:true），普通模式（注释此行或者设置fixed:false）
              audio: [{
                  name: 'Coastline',
                  artist: 'Liu,WOAK,Hollow Coves',
                  lrc: `[ti:Coastline]
        [ar:Liu/WOAK/Hollow Coves]
        [al:Study Music, Vol. 1: Deep House (Presented by Spinnin&apos; Records)]
        [by:]
        [offset:0]
        [00:00.00]Coastline - Liu/WOAK/Hollow Coves
        [00:09.20]Lyrics by：C. Liu de Almeida/M. Carins/R. Henderson
        [00:18.40]I&apos;m leaving home for the Coastline
        [00:22.24]Some place under the sun
        [00:26.08]I feel my heart for the first time
        [00:30.07]&apos;Cause now I&apos;m moving on yeah I&apos;m moving on
        [00:33.89]And there&apos;s a place that I&apos;ve dreamed of
        [00:37.82]Where I can free my mind
        [00:41.79]I hear the sounds of the season
        [00:45.00]And lose all sense of time
        [00:51.82]I&apos;m moving far away
        [00:55.69]To a sunny place
        [00:59.64]Where it&apos;s just you and me
        [01:03.45]Feels like we&apos;re in a dream
        [01:06.36]You know what I
        [01:07.53]I&apos;m moving far away
        [01:11.30]To a sunny place
        [01:15.29]Where it&apos;s just you and me
        [01:19.30]Feels like we&apos;re in a dream
        [01:21.90]You know what I mean
        [01:38.95]I&apos;m leaving home for the Coastline
        [01:42.87]Some place under the sun
        [01:46.75]I feel my heart for the first time
        [01:50.71]&apos;Cause now I&apos;m moving on yeah I&apos;m moving
        [01:54.65]And there&apos;s a place that I&apos;ve dreamed of
        [01:58.54]Where I can free my mind
        [02:02.52]I hear the sounds of the season
        [02:05.67]And lose all sense of time
        [02:12.49]I&apos;m moving far away
        [02:16.33]To a sunny place
        [02:20.19]Where it&apos;s just you and me
        [02:24.13]Feels like we&apos;re in a dream
        [02:26.87]You know what I mean
        [02:28.11]I&apos;m moving far away
        [02:32.07]To a sunny place
        [02:35.94]Where it&apos;s just you and me
        [02:39.95]Feels like we&apos;re in a dream
        [02:42.60]You know what I mean
        [02:43.96]I&apos;m moving far away
        [02:47.78]To a sunny place
        [02:51.70]Where it&apos;s just you and me
        [02:55.61]Feels like we&apos;re in a dream
        [02:58.27]You know what I mean`,
                  cover: 'http://y.gtimg.cn/music/photo_new/T002R300x300M000004Yg3Aw3L10S2.jpg?param=300x300',
                  url: ' http://isure.stream.qqmusic.qq.com/C400003tvE9h0JkgQ3.m4a?guid=431113228&vkey=6F20C3162922EC7294F2DB58DEF6E4EF4910458E4D5B6E8B8147AC7A5B5C331E5DE6F8A47E7007AE04C1E9F25D158C1F49B3912D2AA8EEF8&uin=0&fromtag=66'
                },
              {
                  name: 'Wake Me Up When September Ends',
                  artist: 'Green Day',
                  // lrc: '/downloads/lrc/平凡之路-朴树.lrc',
                  cover: 'https://p2.music.126.net/K-T9MrYYtb5bnTa79Im3EA==/5508553255257579.jpg?param=300x300',
                  url: 'https://m701.music.126.net/20201108002622/3b85bcf0906cd23a119d8866aac7331d/jdyyaac/0558/030c/535c/227a690c184fa499497cd630f916e224.m4a'
                },
                {
                  name: '爱江山更爱美人 (翻自 李丽芬)',
                  artist: '阿虾',
                  // lrc: '/downloads/lrc/后会无期-G.E.M.邓紫棋.lrc',
                  cover: 'https://p2.music.126.net/xyt6V2Jfg4lHhDhdpkLQqw==/109951164428903785.jpg?param=300x300',
                  url: 'http://m701.music.126.net/20201108004412/755a52c49d2578beaed2be4d18ab2efb/jdymusic/obj/w5zDlMODwrDDiGjCn8Ky/2110595831/4f49/7bce/2e83/ccde791fe666cb7ca40773abc00537c1.mp3'
                }
              ]
            });
        
            //实现切换音频时，根据音频的封面图片自适应主题色
            const colorThief = new ColorThief();
            const setTheme = (index) => {
              if (!ap.list.audios[index].theme) {
                colorThief.getColorAsync(ap.list.audios[index].cover, function(color) {
                  ap.theme(`rgb(${color[0]}, ${color[1]}, ${color[2]})`, index);
                });
              }
            };
            setTheme(ap.list.index);
            ap.on('listswitch', (data) => {
              setTheme(data.index);
            });
          </script>
      <% } %>
    </div> -->


  </div>

  <!-- <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css">
  <script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js"></script>

  <script src="https://cdn.jsdelivr.net/npm/meting@2/dist/Meting.min.js"></script>
  <meting-js
	name="rainymood"
	artist="rainymood"
	url="http://m701.music.126.net/20201108004412/755a52c49d2578beaed2be4d18ab2efb/jdymusic/obj/w5zDlMODwrDDiGjCn8Ky/2110595831/4f49/7bce/2e83/ccde791fe666cb7ca40773abc00537c1.mp3"
	cover="https://p2.music.126.net/xyt6V2Jfg4lHhDhdpkLQqw==/109951164428903785.jpg"
	fixed="true">
</meting-js>
<script src="//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js"></script>
<script src="https://cdn.bootcss.com/jquery.pjax/2.0.1/jquery.pjax.min.js"></script>
<script>
  $(document).on('pjax:start', function () {
    if (window.aplayers) {
        for (let i = 0; i < window.aplayers.length; i++) {
            window.aplayers[i].destroy();
        }
        window.aplayers = [];
    }
});
</script> -->

<!-- 引用Aplayer和metingjs

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.css">

<script src="https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.js"></script>

<script src="https://cdn.jsdelivr.net/npm/meting@1.2.0/dist/Meting.min.js"></script>

<div id="my-aplayer"

 class="aplayer" 

 data-id="5010430092" 

 data-server="netease" 

 data-type="playlist" 

 data-fixed="true" 

 data-autoplay="false" 

 data-order="list" 

 data-volume="0.55" 

 data-theme="#cc543a" 

 data-preload="auto" 

></div> -->



<!-- 建站时间 -->
<!-- <script language=javascript>
  function siteTime() {
      window.setTimeout("siteTime()", 1000);
      var seconds = 1000;
      var minutes = seconds * 60;
      var hours = minutes * 60;
      var days = hours * 24;
      var years = days * 365;
      var today = new Date();
      var todayYear = today.getFullYear();
      var todayMonth = today.getMonth() + 1;
      var todayDate = today.getDate();
      var todayHour = today.getHours();
      var todayMinute = today.getMinutes();
      var todaySecond = today.getSeconds();
      /* Date.UTC() -- 返回date对象距世界标准时间(UTC)1970年1月1日午夜之间的毫秒数(时间戳)
      year - 作为date对象的年份，为4位年份值
      month - 0-11之间的整数，做为date对象的月份
      day - 1-31之间的整数，做为date对象的天数
      hours - 0(午夜24点)-23之间的整数，做为date对象的小时数
      minutes - 0-59之间的整数，做为date对象的分钟数
      seconds - 0-59之间的整数，做为date对象的秒数
      microseconds - 0-999之间的整数，做为date对象的毫秒数 */
      var t1 = Date.UTC(2020, 11, 01, 00, 00, 00); // 北京时间2018-2-13 00:00:00
      var t2 = Date.UTC(todayYear, todayMonth, todayDate, todayHour, todayMinute, todaySecond);
      var diff = t2 - t1;
      var diffYears = Math.floor(diff / years);
      var diffDays = Math.floor((diff / days) - diffYears * 365);
      var diffHours = Math.floor((diff - (diffYears * 365 + diffDays) * days) / hours);
      var diffMinutes = Math.floor((diff - (diffYears * 365 + diffDays) * days - diffHours * hours) / minutes);
      var diffSeconds = Math.floor((diff - (diffYears * 365 + diffDays) * days - diffHours * hours - diffMinutes * minutes) / seconds);
      document.getElementById("sitetime").innerHTML = "小破站已运行 " +diffYears+" 年 "+diffDays + " 天 " + diffHours + " 小时 " + diffMinutes + " 分钟 " + diffSeconds + " 秒";
  }
  siteTime();
</script> -->
</body>

</html>
