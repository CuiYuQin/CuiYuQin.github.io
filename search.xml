<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>内容脑图(Mindmap)</title>
    <url>/2020/11/17/%E5%86%85%E5%AE%B9%E8%84%91%E5%9B%BE/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote>
<p>这是我内容记录的大纲，方便自己梳理想法，也方便以后补充。</p>
</blockquote>
<h3 id="数据结构与算法"><a href="#数据结构与算法" class="headerlink" title="数据结构与算法"></a>数据结构与算法</h3><ul>
<li>课本内容</li>
<li>LeetCode</li>
<li>剑指 Offer</li>
<li>算法思想</li>
<li>经典算法</li>
</ul>
<h3 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h3><h3 id="计算机网络"><a href="#计算机网络" class="headerlink" title="计算机网络"></a>计算机网络</h3><h3 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h3><h3 id="部署运维"><a href="#部署运维" class="headerlink" title="部署运维"></a>部署运维</h3><h3 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h3><h3 id="Go"><a href="#Go" class="headerlink" title="Go"></a>Go</h3><h3 id="Javascript"><a href="#Javascript" class="headerlink" title="Javascript"></a>Javascript</h3><h3 id="Vue"><a href="#Vue" class="headerlink" title="Vue"></a>Vue</h3><h3 id="经验"><a href="#经验" class="headerlink" title="经验"></a>经验</h3><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3>]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>思维导图</tag>
        <tag>其他</tag>
      </tags>
  </entry>
  <entry>
    <title>test</title>
    <url>/2020/11/28/test/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><img src="/2020/11/28/test/1.jpg"></p>
]]></content>
      <tags>
        <tag>test</tag>
      </tags>
  </entry>
  <entry>
    <title>计算机网络-简介</title>
    <url>/2020/11/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-%E7%AE%80%E4%BB%8B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>]]></content>
      <categories>
        <category>计算机网络</category>
        <category>简介</category>
      </categories>
      <tags>
        <tag>计算机网络</tag>
      </tags>
  </entry>
  <entry>
    <title>算法思想-贪心算法</title>
    <url>/2020/11/01/%E7%AE%97%E6%B3%95%E6%80%9D%E6%83%B3-%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>在做选择时，每次都要选择对自身最为有利的结果，保证自身利益的最大化。贪心算法就是利用这种贪心思想而得出一种算法。</p>
<p>贪心算法可以简单描述为：大事化小，小事化了。对于一个较大的问题，通过找到与子问题的重叠，把复杂的问题划分为多个小问题。并且对于每个子问题的解进行选择，找出最优值，进行处理，再找出最优值，再处理。也就是说贪心算法是一种在每一步选择中都采取在当前状态下最好或最优的选择，从而希望得到结果是最好或最优的算法。</p>
<p>一句话：不着眼于长期发展，只关心当下收益。</p>
<p>贪心算法不是对所有问题都能得到整体最优解，但对范围相当广泛的许多问题他能产生整体最优解或者是整体最优解的近似解。</p>
<h3 id="解题过程"><a href="#解题过程" class="headerlink" title="解题过程"></a>解题过程</h3><ul>
<li>建立数学模型</li>
<li>把问题分解成若干个子问题</li>
<li>对每个子问题求解，只求局部最优</li>
<li>把子问题的局部最优解合成原来问题的一个解</li>
</ul>
<h3 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h3><p>小明手中有 1，5，10，50，100 五种面额的纸币，每种纸币对应张数分别为 5，2，2，3，5 张。若小明需要支付 456 元，则需要多少张纸币？</p>
<ol>
<li><p>建立数学模型</p>
<p>设小明每次选择纸币面额为 Xi ，需要的纸币张数为 n 张，则</p>
<p>X1 + X2 + … + Xn = 456.</p>
</li>
<li><p>把问题分解成若干个子问题</p>
<p>小明选择纸币进行支付的过程，可以划分为n个子问题，即每个子问题对应为：<br>在未超过456的前提下，在剩余的纸币中选择一张纸币。</p>
</li>
<li><p>对每个子问题求解，只求局部最优</p>
<p>制定的贪心策略为：在允许的条件下选择面额最大的纸币。</p>
<ul>
<li>选取面值为 100 的纸币，则 X1 = 100, V = 456 - 100 = 356；</li>
<li>继续选取面值为 100 的纸币，则 X2 = 100, V = 356 - 100 = 256；</li>
<li>继续选取面值为 100 的纸币，则 X3 = 100, V = 256 - 100 = 156；</li>
<li>继续选取面值为 100 的纸币，则 X4 = 100, V = 156 - 100 = 56；</li>
<li>选取面值为 50 的纸币，则 X5 = 50, V = 56 - 50 = 6；</li>
<li>选取面值为 5 的纸币，则 X6 = 5, V = 6 - 5 = 1；</li>
<li>选取面值为 1 的纸币，则 X7 = 1, V = 1 - 1 = 0；求解结束</li>
</ul>
</li>
<li><p>把子问题的局部最优解合成原来问题的一个解</p>
<p>小明需要支付的纸币张数为 7 张，其中面值 100 元的 4 张，50 元 1 张，5 元 1 张，1 元 1 张。</p>
</li>
</ol>
<h4 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">5</span>; </span><br><span class="line"><span class="keyword">int</span> Count[N] = &#123;<span class="number">5</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>&#125;;<span class="comment">//每一张纸币的数量 </span></span><br><span class="line"><span class="keyword">int</span> Value[N] = &#123;<span class="number">1</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">50</span>,<span class="number">100</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> money)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = N-<span class="number">1</span>;i&gt;=<span class="number">0</span>;i--) &#123;</span><br><span class="line">        <span class="keyword">int</span> c = min(money/Value[i],Count[i]);<span class="comment">//每一个所需要的张数 </span></span><br><span class="line">        money = money-c*Value[i];</span><br><span class="line">        num += c;<span class="comment">//总张数 </span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(money&gt;<span class="number">0</span>) num=-<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> num;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>









]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>算法思想</tag>
      </tags>
  </entry>
</search>
